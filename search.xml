<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Frequently Used Functions</title>
      <link href="/2020/05/15/frequntly-used-functions/"/>
      <url>/2020/05/15/frequntly-used-functions/</url>
      
        <content type="html"><![CDATA[<h1 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h1><p>持续更新</p><h2 id="Sigmoid函数"><a href="#Sigmoid函数" class="headerlink" title="Sigmoid函数"></a>Sigmoid函数</h2><p>用于将实数域映射到(0,1)上：<br>$f(x)\ =\ \frac{1}{1+e^{-x}}$</p><h2 id="SoftMax函数"><a href="#SoftMax函数" class="headerlink" title="SoftMax函数"></a>SoftMax函数</h2><p>最大值函数的推广，用于得到每个元素被取到的概率（越大的元素 优先级越高）<br>$\forall x_i\in X,\ f(x_i)=\frac{e^{x_i}}{\sum_i{e^{x_i}}}$</p>]]></content>
      
      
      <categories>
          
          <category> Machine Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MachineLearning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab Grammar and Usage</title>
      <link href="/2020/01/15/matlab/"/>
      <url>/2020/01/15/matlab/</url>
      
        <content type="html"><![CDATA[<h1 id="Matlab的基本用法"><a href="#Matlab的基本用法" class="headerlink" title="Matlab的基本用法"></a>Matlab的基本用法</h1><p><u>从Matlab的官方教程中摘下来的基础用法。</u></p><h2 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h2><p>分为菜单、文件区、命令行和工作区，工作区有所有的变量信息；</p><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><table><thead><tr><th>command</th><th>usage</th></tr></thead><tbody><tr><td>doc cmd</td><td>查手册，写在最前面</td></tr><tr><td>clear, clc</td><td>清空变量/清空命令行</td></tr><tr><td>pi, sin, …</td><td>$\pi$, 基本数学函数</td></tr><tr><td>x=[1 2 3; 3 4 5]</td><td>矩阵，空格行内分，分号分列</td></tr><tr><td>x=1:2:10,  linspace(1,10,2)</td><td>从1开始到10间隔为2</td></tr><tr><td>x=(x+1)</td><td>矩阵或向量可与标量计算</td></tr><tr><td>x=x.*x</td><td>对应分量相乘</td></tr><tr><td>x=(x*2)’</td><td>转置</td></tr><tr><td>rand, randn, randi</td><td>随机函数</td></tr><tr><td>zeros, ones</td><td>特殊矩阵生成</td></tr><tr><td>save file x, load file</td><td>保存，加载变量</td></tr><tr><td>x=A(5,7)</td><td>索引，内置end为最后一位，1开头</td></tr><tr><td>x=A(1:3, :)</td><td>冒号可选取范围，也可表示全部</td></tr><tr><td>[val, idx] = max(A)</td><td>多变量赋值用方括号</td></tr><tr><td>size(A), numel(A,cdt)</td><td>尺寸和元素个数(可加条件)</td></tr><tr><td>plot(x,y,’r-.o’)</td><td>画图函数，可加条件，查阅’线条设定’</td></tr><tr><td>loglog,title,legend,xlabel</td><td>望文生义</td></tr><tr><td>hold on/off</td><td>画图时保留上一幅/删除</td></tr><tr><td>&amp;, \</td><td>, 和&amp;&amp;, \</td><td>\</td><td></td><td>貌似可以混用，但是沿袭C的习惯</td></tr><tr><td>A(B &gt; 4)</td><td>逻辑索引，选取A中对应B大于4的位置</td></tr><tr><td>if x&gt;1 cmd end/while/for x=1:3/switch case otherwise/funtion</td><td>决策与循环与函数</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github多账号</title>
      <link href="/2020/01/13/github-accounts/"/>
      <url>/2020/01/13/github-accounts/</url>
      
        <content type="html"><![CDATA[<h1 id="Github-多账号管理"><a href="#Github-多账号管理" class="headerlink" title="Github 多账号管理"></a>Github 多账号管理</h1><p><u>起源于这一天我想开个小号，发现没办法兼容，于是总结一下面向百度配置的经验。</u></p><h2 id="账户配置"><a href="#账户配置" class="headerlink" title="账户配置"></a>账户配置</h2><ol><li><p>生成密钥<br><br> 在git bash中：<code>ssh-keygen -t rsa -C “<a href="mailto:xxxx@github.com" target="_blank" rel="noopener">xxxx@github.com</a>“</code>，生成密钥文件；</p></li><li><p>添加私钥<br><br> <code>ssh-agent bash<br><br> ssh-add id_rsa_xxx</code><br> 注意exit退出ssh bash模式；</p></li><li><p>添加公钥<br><br> 去github的账号setting下的ssh选项中添加公钥内容；</p></li><li><p>添加此账号到config文件<br><br> <code>vi ~/.ssh/config</code></p><p><img src="/images/Github_accounts/1.jpg" alt="1"></p></li></ol><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><code>ssh -T <a href="mailto:git@xxx.github.com" target="_blank" rel="noopener">git@xxx.github.com</a></code><br>涉及到不同的账号是都要用对应的域名。</p><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><p>转到对应文件夹下输入：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config user.name <span class="token string">"xxx"</span><span class="token function">git</span> config user.email <span class="token string">"xxx@xxx"</span><span class="token comment" spellcheck="true"># 可以查看结果</span><span class="token function">git</span> config -l</code></pre>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 实用命令</title>
      <link href="/2019/07/13/centos/"/>
      <url>/2019/07/13/centos/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux下常用命令"><a href="#Linux下常用命令" class="headerlink" title="Linux下常用命令"></a>Linux下常用命令</h1><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>  目前使用的是CentOS7，用VMWare做的虚拟机。小部分命令在其他linux系统下不通用。(一般是RedHat的都通用)</p><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>  有些命令实在难记，但是每隔一段时间就要重用一次，不想重翻手册，写在这里好了。</p><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><ol><li><code>man 命令</code>: 查询对应命令的使用手册</li><li><code>nmtui</code>: 网络配置界面，可以永久修改IP，改完执行<code>service network restart</code></li><li><code>traceroute 地址</code>: 查询到某地址的路径，可以检查网络连通</li><li><code>shutdown 选项</code>: 加<code>-h now</code>或者<code>-h 20:00</code>可以关机，比<code>halt</code>安全一些；加<code>-r now</code>可以重启</li><li><code>wall</code>: 给所有用户广播</li><li><code>mail 用户</code>: 给用户发邮件，不加用户名可以查看自己的邮件</li><li><code>useradd 用户</code>,<code>passwd 用户</code>: 添加新用户，设置密码</li><li><code>w</code>,<code>who</code>: 查看所有用户状态</li><li><code>ln 源文件 目标文件</code>: 创建硬链接，加<code>-s</code>创建软链接</li><li><code>chmod *** 文件名</code>: 修改权限为***，rwx—421</li><li><code>history</code>: 查看历史命令，之后用<code>!序号</code>可以调用某一个</li><li>压缩与解压：<ul><li><code>.gz</code>文件使用<code>gzip</code>/<code>gunzip(gzip -d)</code></li><li><code>.tar</code>文件使用<code>tar -cvf</code>/<code>tar -xvf</code></li><li><code>.tar.gz</code>文件使用<code>tar -zcvf</code>/<code>tar -zxvf</code></li><li><code>.zip</code>文件使用<code>zip</code>/<code>unzip</code>，操作文件夹加<code>-r</code></li><li><code>.bz2</code>文件使用<code>bzip2</code>/<code>bunzip2</code></li><li><code>.tar.bz2</code>文件使用<code>tar -cjvf</code>/<code>tar -xjvf</code></li><li><code>.tar.xz</code>文件使用<code>tar Jxvf</code>解压（不清楚原理）</li></ul></li><li><code>vi 文件</code>: 用vim编辑文本文件<ul><li>输入模式<code>a、A、i、I、o、O</code>，对应<code>光标后插入，光标行尾插入，光标前插入，光标行首插入，光标下插入行，光标上插入行</code></li><li><code>:set nu</code>,<code>set nonu</code>: 设置、取消行号</li><li><code>x</code>,<code>nx</code>,<code>dd</code>,<code>ndd</code>: 删除(n个)字符，删除(n个)行</li><li><code>nyy</code>,<code>ndd</code>,<code>p</code>: 复制，剪切，粘贴</li><li><code>r</code>,<code>R</code>: 替换，替换模式</li><li><code>u</code>: 撤销</li><li><code>/目标</code>,<code>n</code>,<code>:set ic</code>,<code>set noic</code>: 搜索，下一个，不区分大小写，区分大小写</li><li><code>:%s/原文本/新文本/g</code>,<code>:行号,行号s/原文本/新文本/g</code>: 全文/范围替换</li><li><code>:wq</code>/<code>:x</code>/<code>ZZ</code>,<code>q!</code>: 保存退出，不保存退出</li></ul></li><li>rpm命令：<ul><li><code>rpm -ivh 包全名</code>: 安装</li><li><code>rpm -Uvh 包全名</code>: 升级</li><li><code>rpm -e 包名</code>: 卸载</li><li><code>rpm -q 包名</code>/<code>rpm -qa</code>: 查询是否安装某个包/所有包</li><li><code>rpm -qa | grep 包名</code>: 所有相关包（常用方法）</li><li><code>rpm -qi 包名</code>: 查询信息</li><li><code>rpm -qip 包全名</code>: 查询未安装包</li><li><code>rpm -ql 包名</code>: 查询安装位置</li><li><code>rpm -qf 文件名</code>: 查询文件属于哪个软件包</li><li><a href="www.rpmfind.net">库文件依赖包</a>: 以<code>.so</code>结尾的依赖包需上此网站查询</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WxPython To Create UI For Python</title>
      <link href="/2019/07/08/wxpython/"/>
      <url>/2019/07/08/wxpython/</url>
      
        <content type="html"><![CDATA[<h1 id="WxPython-To-Create-UI"><a href="#WxPython-To-Create-UI" class="headerlink" title="WxPython To Create UI"></a>WxPython To Create UI</h1><h2 id="Reason"><a href="#Reason" class="headerlink" title="Reason"></a>Reason</h2><p>  I am tired of ghost windows, and sometimes I cannot remember how to give input to my former programs. Hence, UI is necessary.<br>  Consider that QT is more complex and more applied in C++, I choose wxPython to create windows of python files.<br>  The most important part in wxPython is the so-called “sizer”, used to control the relative size of parts by proportion, which is difficult to realize in code, thus I use wxFormBuilder to draw them.<br><!-- This app always exit confidentally, annoying. --></p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>  I try to design an app to recorded and calculate my scores by python.<br>  The UI is drawn in wxFormBuilder, and the first .py file is generated by it although I change some details in it. Then, in the main part, I have to realize the window and its functions.</p><h3 id="Source-code"><a href="#Source-code" class="headerlink" title="Source code"></a>Source code</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token comment" spellcheck="true">###########################################################################</span><span class="token comment" spellcheck="true">## Python code generated with wxFormBuilder (version Oct 26 2018)</span><span class="token comment" spellcheck="true">## http://www.wxformbuilder.org/</span><span class="token comment" spellcheck="true">##</span><span class="token comment" spellcheck="true">## PLEASE DO *NOT* EDIT THIS FILE!</span><span class="token comment" spellcheck="true">###########################################################################</span><span class="token keyword">import</span> wx<span class="token keyword">import</span> wx<span class="token punctuation">.</span>xrc<span class="token comment" spellcheck="true">###########################################################################</span><span class="token comment" spellcheck="true">## Class MyFrame1</span><span class="token comment" spellcheck="true">###########################################################################</span><span class="token keyword">class</span> <span class="token class-name">MyFrame1</span> <span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Frame <span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span> self<span class="token punctuation">,</span> parent <span class="token punctuation">)</span><span class="token punctuation">:</span>        wx<span class="token punctuation">.</span>Frame<span class="token punctuation">.</span>__init__ <span class="token punctuation">(</span> self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> id <span class="token operator">=</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> title <span class="token operator">=</span> u<span class="token string">"GPATool"</span><span class="token punctuation">,</span> pos <span class="token operator">=</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> size <span class="token operator">=</span> wx<span class="token punctuation">.</span>Size<span class="token punctuation">(</span> <span class="token number">945</span><span class="token punctuation">,</span><span class="token number">643</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> style <span class="token operator">=</span> wx<span class="token punctuation">.</span>DEFAULT_FRAME_STYLE<span class="token operator">|</span>wx<span class="token punctuation">.</span>TAB_TRAVERSAL <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>SetSizeHints<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>SetBackgroundColour<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Colour<span class="token punctuation">(</span> <span class="token number">235</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">,</span> <span class="token number">250</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        container <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>HORIZONTAL <span class="token punctuation">)</span>        left <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>VERTICAL <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText2 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"Condition Of Lessons"</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText2<span class="token punctuation">.</span>Wrap<span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText2<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">12</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_BOLD<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        left<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticText2<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALIGN_CENTER_HORIZONTAL<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALIGN_CENTER_VERTICAL<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticline1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticLine<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>LI_HORIZONTAL <span class="token punctuation">)</span>        left<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticline1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        bSizer4 <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>HORIZONTAL <span class="token punctuation">)</span>        bSizer5 <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>VERTICAL <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText3 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"Lesson Name : "</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText3<span class="token punctuation">.</span>Wrap<span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText3<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">12</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_NORMAL<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        bSizer5<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticText3<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticline4 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticLine<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>LI_HORIZONTAL <span class="token punctuation">)</span>        bSizer5<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticline4<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText4 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"Lesson Credit : "</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText4<span class="token punctuation">.</span>Wrap<span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText4<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">12</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_NORMAL<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        bSizer5<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticText4<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticline5 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticLine<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>LI_HORIZONTAL <span class="token punctuation">)</span>        bSizer5<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticline5<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText5 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"Core Lesson : "</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText5<span class="token punctuation">.</span>Wrap<span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText5<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">12</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_NORMAL<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        bSizer5<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticText5<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticline6 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticLine<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>LI_HORIZONTAL <span class="token punctuation">)</span>        bSizer5<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticline6<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText6 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"Final Score : "</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText6<span class="token punctuation">.</span>Wrap<span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText6<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">12</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_NORMAL<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        bSizer5<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticText6<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        bSizer4<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> bSizer5<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        bSizer6 <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>VERTICAL <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EmptyString<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_1<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">15</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_MODERN<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_NORMAL<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"楷体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        bSizer6<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>textctrl_1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALL<span class="token operator">|</span>wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticline8 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticLine<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>LI_HORIZONTAL <span class="token punctuation">)</span>        bSizer6<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticline8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_2 <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EmptyString<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_2<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">26</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_NORMAL<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        bSizer6<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>textctrl_2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALL<span class="token operator">|</span>wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticline9 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticLine<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>LI_HORIZONTAL <span class="token punctuation">)</span>        bSizer6<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticline9<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>checkbox_core <span class="token operator">=</span> wx<span class="token punctuation">.</span>CheckBox<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"Is Core"</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>checkbox_core<span class="token punctuation">.</span>SetValue<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>checkbox_core<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">16</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_NORMAL<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        bSizer6<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>checkbox_core<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALIGN_CENTER_HORIZONTAL<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALIGN_CENTER_VERTICAL<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token operator">|</span>wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticline10 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticLine<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>LI_HORIZONTAL <span class="token punctuation">)</span>        bSizer6<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticline10<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_3 <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EmptyString<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_3<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">22</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_NORMAL<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        bSizer6<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>textctrl_3<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALL<span class="token operator">|</span>wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        bSizer4<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> bSizer6<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        left<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> bSizer4<span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticline2 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticLine<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>LI_HORIZONTAL <span class="token punctuation">)</span>        left<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticline2<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>button_send <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"Add Lesson"</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>button_send<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">12</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_BOLD<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        left<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>button_send<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALIGN_CENTER<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALIGN_CENTER_HORIZONTAL<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALIGN_CENTER_VERTICAL<span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        container<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> left<span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        right <span class="token operator">=</span> wx<span class="token punctuation">.</span>BoxSizer<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>VERTICAL <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"Semester Name : "</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText1<span class="token punctuation">.</span>Wrap<span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText1<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">12</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_BOLD<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        right<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticText1<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_semester <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EmptyString<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_semester<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">22</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_BOLD<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_semester<span class="token punctuation">.</span>SetBackgroundColour<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>SystemSettings<span class="token punctuation">.</span>GetColour<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>SYS_COLOUR_BTNSHADOW <span class="token punctuation">)</span> <span class="token punctuation">)</span>        right<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>textctrl_semester<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALL<span class="token operator">|</span>wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticline91 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticLine<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>LI_HORIZONTAL <span class="token punctuation">)</span>        right<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticline91<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText7 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"Lesson Information : "</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText7<span class="token punctuation">.</span>Wrap<span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText7<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">11</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_BOLD<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        right<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticText7<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_info <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EmptyString<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>TE_MULTILINE <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">11</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_NORMAL<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">.</span>SetBackgroundColour<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>SystemSettings<span class="token punctuation">.</span>GetColour<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>SYS_COLOUR_INFOBK <span class="token punctuation">)</span> <span class="token punctuation">)</span>        right<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALL<span class="token operator">|</span>wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticline101 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticLine<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>LI_HORIZONTAL <span class="token punctuation">)</span>        right<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticline101<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND <span class="token operator">|</span>wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText8 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"Score Condition : "</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText8<span class="token punctuation">.</span>Wrap<span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_staticText8<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">12</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_BOLD<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        right<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>m_staticText8<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALL<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_score <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span> self<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EmptyString<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultPosition<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>DefaultSize<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>TE_MULTILINE <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_score<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span> <span class="token number">14</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTFAMILY_DEFAULT<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTSTYLE_NORMAL<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FONTWEIGHT_BOLD<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_score<span class="token punctuation">.</span>SetBackgroundColour<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>SystemSettings<span class="token punctuation">.</span>GetColour<span class="token punctuation">(</span> wx<span class="token punctuation">.</span>SYS_COLOUR_INFOBK <span class="token punctuation">)</span> <span class="token punctuation">)</span>        right<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> self<span class="token punctuation">.</span>textctrl_score<span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ALL<span class="token operator">|</span>wx<span class="token punctuation">.</span>SHAPED<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        container<span class="token punctuation">.</span>Add<span class="token punctuation">(</span> right<span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>EXPAND<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>SetSizer<span class="token punctuation">(</span>container<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Layout<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_menubar1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>MenuBar<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_menu1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Menu<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_menuItem1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>MenuItem<span class="token punctuation">(</span>self<span class="token punctuation">.</span>m_menu1<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"ClearAll"</span><span class="token punctuation">,</span>                                       <span class="token string">"Clear All The Indormation In This Window!!!"</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ITEM_NORMAL<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_menu1<span class="token punctuation">.</span>Append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>m_menuItem1<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_menuItem2 <span class="token operator">=</span> wx<span class="token punctuation">.</span>MenuItem<span class="token punctuation">(</span>self<span class="token punctuation">.</span>m_menu1<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"SaveScore"</span><span class="token punctuation">,</span>                                       <span class="token string">"Only Save The information Of The Score Condition."</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ITEM_NORMAL<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_menu1<span class="token punctuation">.</span>Append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>m_menuItem2<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_menuItem3 <span class="token operator">=</span> wx<span class="token punctuation">.</span>MenuItem<span class="token punctuation">(</span>self<span class="token punctuation">.</span>m_menu1<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"SaveInfo"</span><span class="token punctuation">,</span>                                       <span class="token string">"Only Save The Information Of All Lessons."</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ITEM_NORMAL<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_menu1<span class="token punctuation">.</span>Append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>m_menuItem3<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_menuItem4 <span class="token operator">=</span> wx<span class="token punctuation">.</span>MenuItem<span class="token punctuation">(</span>self<span class="token punctuation">.</span>m_menu1<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">,</span> u<span class="token string">"SaveAll"</span><span class="token punctuation">,</span>                                       <span class="token string">"Save All The Information Of This Semester."</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ITEM_NORMAL<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_menu1<span class="token punctuation">.</span>Append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>m_menuItem4<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_menubar1<span class="token punctuation">.</span>Append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>m_menu1<span class="token punctuation">,</span> u<span class="token string">"Options"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>SetMenuBar<span class="token punctuation">(</span>self<span class="token punctuation">.</span>m_menubar1<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>m_statusBar1 <span class="token operator">=</span> self<span class="token punctuation">.</span>CreateStatusBar<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>STB_SIZEGRIP<span class="token punctuation">,</span> wx<span class="token punctuation">.</span>ID_ANY<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Centre<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>BOTH<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># Connect Events</span>        self<span class="token punctuation">.</span>textctrl_1<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_TEXT_ENTER<span class="token punctuation">,</span> self<span class="token punctuation">.</span>jump2<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_2<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_TEXT_ENTER<span class="token punctuation">,</span> self<span class="token punctuation">.</span>jump3<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_3<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_TEXT_ENTER<span class="token punctuation">,</span> self<span class="token punctuation">.</span>jumpb<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_CLOSE<span class="token punctuation">,</span> self<span class="token punctuation">.</span>on_close<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 自己加的</span>        self<span class="token punctuation">.</span>button_send<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_BUTTON<span class="token punctuation">,</span> self<span class="token punctuation">.</span>send<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_TEXT_ENTER<span class="token punctuation">,</span> self<span class="token punctuation">.</span>score_update_<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_semester<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_TEXT_ENTER<span class="token punctuation">,</span> self<span class="token punctuation">.</span>score_update<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_MENU<span class="token punctuation">,</span> self<span class="token punctuation">.</span>clearall<span class="token punctuation">,</span> id<span class="token operator">=</span>self<span class="token punctuation">.</span>m_menuItem1<span class="token punctuation">.</span>GetId<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_MENU<span class="token punctuation">,</span> self<span class="token punctuation">.</span>savescore<span class="token punctuation">,</span> id<span class="token operator">=</span>self<span class="token punctuation">.</span>m_menuItem2<span class="token punctuation">.</span>GetId<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_MENU<span class="token punctuation">,</span> self<span class="token punctuation">.</span>saveinfo<span class="token punctuation">,</span> id<span class="token operator">=</span>self<span class="token punctuation">.</span>m_menuItem3<span class="token punctuation">.</span>GetId<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_MENU<span class="token punctuation">,</span> self<span class="token punctuation">.</span>saveall<span class="token punctuation">,</span> id<span class="token operator">=</span>self<span class="token punctuation">.</span>m_menuItem4<span class="token punctuation">.</span>GetId<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token comment" spellcheck="true"># Virtual event handlers, overide them in your derived class</span>    <span class="token keyword">def</span> <span class="token function">jump2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        event<span class="token punctuation">.</span>Skip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">jump3</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        event<span class="token punctuation">.</span>Skip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">on_close</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        event<span class="token punctuation">.</span>Skip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">jumpb</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        event<span class="token punctuation">.</span>Skip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">send</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        event<span class="token punctuation">.</span>Skip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">score_update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        event<span class="token punctuation">.</span>Skip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">clearall</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        event<span class="token punctuation">.</span>Skip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">savescore</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        event<span class="token punctuation">.</span>Skip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">saveinfo</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        event<span class="token punctuation">.</span>Skip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">saveall</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        event<span class="token punctuation">.</span>Skip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">score_update_</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>        event<span class="token punctuation">.</span>Skip<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>  This is the window.<br>  Next is the main part:</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> gpaTool<span class="token keyword">import</span> wx<span class="token keyword">import</span> os<span class="token comment" spellcheck="true">#处理分数的函数</span><span class="token keyword">def</span> <span class="token function">trans_gpa</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> score<span class="token operator">&lt;</span><span class="token number">60</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">0</span>    <span class="token keyword">elif</span> score<span class="token operator">&lt;</span><span class="token number">62</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">1</span>    <span class="token keyword">elif</span> score<span class="token operator">&lt;</span><span class="token number">65</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">1.7</span>    <span class="token keyword">elif</span> score<span class="token operator">&lt;</span><span class="token number">67</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">2</span>    <span class="token keyword">elif</span> score<span class="token operator">&lt;</span><span class="token number">70</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">2.3</span>    <span class="token keyword">elif</span> score<span class="token operator">&lt;</span><span class="token number">75</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">2.7</span>    <span class="token keyword">elif</span> score<span class="token operator">&lt;</span><span class="token number">80</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">3</span>    <span class="token keyword">elif</span> score<span class="token operator">&lt;</span><span class="token number">85</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">3.3</span>    <span class="token keyword">elif</span> score<span class="token operator">&lt;</span><span class="token number">90</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">3.7</span>    <span class="token keyword">elif</span> score<span class="token operator">&lt;</span><span class="token number">95</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">4</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">4.3</span><span class="token keyword">def</span> <span class="token function">ave_score</span><span class="token punctuation">(</span>scores<span class="token punctuation">,</span> credits<span class="token punctuation">)</span><span class="token punctuation">:</span>    m<span class="token punctuation">,</span> n <span class="token operator">=</span> len<span class="token punctuation">(</span>scores<span class="token punctuation">)</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>credits<span class="token punctuation">)</span>    <span class="token keyword">assert</span> m <span class="token operator">==</span> n    total_score<span class="token punctuation">,</span> total_credit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>        total_score <span class="token operator">+=</span> scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> credits<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        total_credit <span class="token operator">+=</span> credits<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">return</span> int<span class="token punctuation">(</span>total_score<span class="token operator">/</span>total_credit <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">ave_gpa</span><span class="token punctuation">(</span>scores<span class="token punctuation">,</span> credits<span class="token punctuation">)</span><span class="token punctuation">:</span>    m<span class="token punctuation">,</span> n <span class="token operator">=</span> len<span class="token punctuation">(</span>scores<span class="token punctuation">)</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>credits<span class="token punctuation">)</span>    <span class="token keyword">assert</span> m <span class="token operator">==</span> n    total_gpa<span class="token punctuation">,</span> total_credit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>        total_gpa <span class="token operator">+=</span> trans_gpa<span class="token punctuation">(</span>scores<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> credits<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        total_credit <span class="token operator">+=</span> credits<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">return</span> total_gpa<span class="token operator">/</span>total_credit<span class="token comment" spellcheck="true">#定义窗口继承类</span><span class="token keyword">class</span> <span class="token class-name">myWin</span><span class="token punctuation">(</span>gpaTool<span class="token punctuation">.</span>MyFrame1<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span> self <span class="token punctuation">,</span> parent <span class="token punctuation">)</span><span class="token punctuation">:</span>        gpaTool<span class="token punctuation">.</span>MyFrame1<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>dir_name <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">def</span> <span class="token function">kill_focus</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sth<span class="token punctuation">)</span><span class="token punctuation">:</span>        sth<span class="token punctuation">.</span>Disable<span class="token punctuation">(</span><span class="token punctuation">)</span>        sth<span class="token punctuation">.</span>Enable<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">jump2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>textctrl_2<span class="token punctuation">.</span>SetFocus<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_2<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">jumpb</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>send<span class="token punctuation">(</span>None<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">jump3</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>textctrl_3<span class="token punctuation">.</span>SetFocus<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_3<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">send</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        lesson_name <span class="token operator">=</span> self<span class="token punctuation">.</span>textctrl_1<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token operator">not</span> lesson_name <span class="token punctuation">:</span>            dlg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageBox<span class="token punctuation">(</span><span class="token string">"No Lesson Name!"</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>textctrl_1<span class="token punctuation">.</span>SetFocus<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token keyword">if</span> <span class="token string">" "</span> <span class="token keyword">in</span> lesson_name <span class="token punctuation">:</span>            dlg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageBox<span class="token punctuation">(</span><span class="token string">"No Space Allowed!"</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>textctrl_1<span class="token punctuation">.</span>SetFocus<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            lesson_credit <span class="token operator">=</span> float<span class="token punctuation">(</span>self<span class="token punctuation">.</span>textctrl_2<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> lesson_credit <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            dlg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageBox<span class="token punctuation">(</span><span class="token string">"Wrong Credit!"</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>textctrl_2<span class="token punctuation">.</span>SetFocus<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            lesson_score <span class="token operator">=</span> int<span class="token punctuation">(</span>self<span class="token punctuation">.</span>textctrl_3<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> lesson_score <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">or</span> lesson_score <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">:</span>                <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            dlg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageBox<span class="token punctuation">(</span><span class="token string">"Wrong Score!"</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>textctrl_3<span class="token punctuation">.</span>SetFocus<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        lesson_core <span class="token operator">=</span> int<span class="token punctuation">(</span>self<span class="token punctuation">.</span>checkbox_core<span class="token punctuation">.</span>IsChecked<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        msg <span class="token operator">=</span> <span class="token string">"LESSON: "</span> <span class="token operator">+</span> lesson_name <span class="token operator">+</span> <span class="token string">"  "</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>lesson_credit<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" points,  "</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>lesson_core<span class="token punctuation">)</span><span class="token punctuation">:</span>            msg <span class="token operator">+=</span> <span class="token string">"Core     "</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>lesson_score<span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">" scores,   "</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>trans_gpa<span class="token punctuation">(</span>lesson_score<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" level;\n"</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            msg <span class="token operator">+=</span> <span class="token string">"Not-Core     "</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>lesson_score<span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">" scores,   "</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>trans_gpa<span class="token punctuation">(</span>lesson_score<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" level;\n"</span>        <span class="token keyword">if</span> msg <span class="token keyword">in</span> self<span class="token punctuation">.</span>msg<span class="token punctuation">:</span>            dlg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageBox<span class="token punctuation">(</span><span class="token string">"Duplicate Lesson!"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span> <span class="token punctuation">:</span>            self<span class="token punctuation">.</span>msg<span class="token punctuation">.</span>append<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">.</span>WriteText<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>score_update<span class="token punctuation">(</span>None<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_1<span class="token punctuation">.</span>SetFocus<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">score_update_</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>        info <span class="token operator">=</span> self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token operator">not</span> info<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>textctrl_score<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            tmp <span class="token operator">=</span> info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>            gpa <span class="token operator">=</span> str<span class="token punctuation">(</span>trans_gpa<span class="token punctuation">(</span>int<span class="token punctuation">(</span>tmp<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> tmp<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">!=</span> gpa<span class="token punctuation">:</span>                info<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"scores,"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"   "</span> <span class="token operator">+</span> gpa <span class="token operator">+</span> <span class="token string">" level;"</span>        info <span class="token operator">=</span> <span class="token string">"\n"</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n"</span>        self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">.</span>WriteText<span class="token punctuation">(</span>info<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>score_update<span class="token punctuation">(</span>None<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">score_update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        score_core<span class="token punctuation">,</span> score_not_core<span class="token punctuation">,</span> credit_core<span class="token punctuation">,</span>credit_not_core <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        info <span class="token operator">=</span> self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token operator">not</span> info<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>textctrl_score<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> info<span class="token punctuation">:</span>                tmp <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> i<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>                <span class="token keyword">if</span> tmp<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"Core"</span><span class="token punctuation">:</span>                    score_core<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>tmp<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    credit_core<span class="token punctuation">.</span>append<span class="token punctuation">(</span>float<span class="token punctuation">(</span>tmp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                score_not_core<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>tmp<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                credit_not_core<span class="token punctuation">.</span>append<span class="token punctuation">(</span>float<span class="token punctuation">(</span>tmp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            dlg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageBox<span class="token punctuation">(</span><span class="token string">"Something Wrong Within The Info Box?"</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">.</span>SetFocus<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        msg <span class="token operator">=</span> <span class="token string">"Semester: "</span>        tmp <span class="token operator">=</span> self<span class="token punctuation">.</span>textctrl_semester<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token operator">not</span> tmp<span class="token punctuation">:</span>            msg <span class="token operator">+=</span> <span class="token string">"Not-Named , \n"</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            msg <span class="token operator">+=</span> <span class="token punctuation">(</span>tmp <span class="token operator">+</span> <span class="token string">" , \n"</span><span class="token punctuation">)</span>        msg <span class="token operator">+=</span> <span class="token string">"For Core Lessons:\n\tAverage Score: "</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>ave_score<span class="token punctuation">(</span>score_core<span class="token punctuation">,</span>credit_core<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">",\n\tGPA: "</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>ave_gpa<span class="token punctuation">(</span>score_core<span class="token punctuation">,</span>credit_core<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">";\n"</span>        msg <span class="token operator">+=</span> <span class="token string">"For ALL Lessons:\n\tAverage Score: "</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>ave_score<span class="token punctuation">(</span>score_not_core<span class="token punctuation">,</span>credit_not_core<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">",\n\tGPA: "</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>ave_gpa<span class="token punctuation">(</span>score_not_core<span class="token punctuation">,</span>credit_not_core<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" //"</span>        self<span class="token punctuation">.</span>textctrl_score<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>textctrl_score<span class="token punctuation">.</span>WriteText<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">clearall</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        dlg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageDialog<span class="token punctuation">(</span>None<span class="token punctuation">,</span> <span class="token string">"Comfirm Clearing ?"</span><span class="token punctuation">,</span> <span class="token string">"Delete"</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>YES_NO <span class="token operator">|</span> wx<span class="token punctuation">.</span>ICON_QUESTION<span class="token punctuation">)</span>        <span class="token keyword">if</span> dlg<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> wx<span class="token punctuation">.</span>ID_YES<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>textctrl_1<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>textctrl_2<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>textctrl_3<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>textctrl_semester<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>textctrl_score<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token punctuation">)</span>        dlg<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">savescore</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        fd <span class="token operator">=</span> wx<span class="token punctuation">.</span>FileDialog<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">'Save Score To ...'</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>dir_name<span class="token punctuation">,</span> <span class="token string">'.txt'</span><span class="token punctuation">,</span> <span class="token string">'TEXT file(*.txt)|*.txt'</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FD_SAVE<span class="token punctuation">)</span>        <span class="token keyword">if</span> fd<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> wx<span class="token punctuation">.</span>ID_OK<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>file_name <span class="token operator">=</span> fd<span class="token punctuation">.</span>GetFilename<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>dir_name <span class="token operator">=</span> fd<span class="token punctuation">.</span>GetDirectory<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token keyword">with</span> open<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>self<span class="token punctuation">.</span>dir_name<span class="token punctuation">,</span> self<span class="token punctuation">.</span>file_name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>textctrl_score<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span>                    save_msg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageDialog<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">'Successfully Saved'</span><span class="token punctuation">,</span> <span class="token string">'Hint'</span><span class="token punctuation">)</span>            <span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span>                save_msg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageDialog<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">'Invalid Path'</span><span class="token punctuation">,</span> <span class="token string">'Hint'</span><span class="token punctuation">)</span>            save_msg<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span>            save_msg<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>        fd<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">saveinfo</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        fd <span class="token operator">=</span> wx<span class="token punctuation">.</span>FileDialog<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">'Save Lessons To ...'</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>dir_name<span class="token punctuation">,</span> <span class="token string">'.txt'</span><span class="token punctuation">,</span> <span class="token string">'TEXT file(*.txt)|*.txt'</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FD_SAVE<span class="token punctuation">)</span>        <span class="token keyword">if</span> fd<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> wx<span class="token punctuation">.</span>ID_OK<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>file_name <span class="token operator">=</span> fd<span class="token punctuation">.</span>GetFilename<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>dir_name <span class="token operator">=</span> fd<span class="token punctuation">.</span>GetDirectory<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token keyword">with</span> open<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>self<span class="token punctuation">.</span>dir_name<span class="token punctuation">,</span> self<span class="token punctuation">.</span>file_name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>textctrl_semester<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n"</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span>                    save_msg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageDialog<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">'Successfully Saved'</span><span class="token punctuation">,</span> <span class="token string">'Hint'</span><span class="token punctuation">)</span>            <span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span>                save_msg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageDialog<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">'Invalid Path'</span><span class="token punctuation">,</span> <span class="token string">'Hint'</span><span class="token punctuation">)</span>            save_msg<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span>            save_msg<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>        fd<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">saveall</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        fd <span class="token operator">=</span> wx<span class="token punctuation">.</span>FileDialog<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">'Save All Information To ...'</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>dir_name<span class="token punctuation">,</span> <span class="token string">'.txt'</span><span class="token punctuation">,</span> <span class="token string">'TEXT file(*.txt)|*.txt'</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>FD_SAVE<span class="token punctuation">)</span>        <span class="token keyword">if</span> fd<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> wx<span class="token punctuation">.</span>ID_OK<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>file_name <span class="token operator">=</span> fd<span class="token punctuation">.</span>GetFilename<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>dir_name <span class="token operator">=</span> fd<span class="token punctuation">.</span>GetDirectory<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token keyword">with</span> open<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>self<span class="token punctuation">.</span>dir_name<span class="token punctuation">,</span> self<span class="token punctuation">.</span>file_name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>textctrl_score<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n"</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>textctrl_info<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    save_msg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageDialog<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">'Successfully Saved'</span><span class="token punctuation">,</span> <span class="token string">'Hint'</span><span class="token punctuation">)</span>            <span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span>                save_msg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageDialog<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">'Invalid Path'</span><span class="token punctuation">,</span> <span class="token string">'Hint'</span><span class="token punctuation">)</span>            save_msg<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span>            save_msg<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>        fd<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">on_close</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>        dlg <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageDialog<span class="token punctuation">(</span>None<span class="token punctuation">,</span> u<span class="token string">"Confirm Quiting ?"</span><span class="token punctuation">,</span> u<span class="token string">"Quit"</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>YES_NO <span class="token operator">|</span> wx<span class="token punctuation">.</span>ICON_QUESTION<span class="token punctuation">)</span>        <span class="token keyword">if</span> dlg<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> wx<span class="token punctuation">.</span>ID_YES<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span>        dlg<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    myApp <span class="token operator">=</span> wx<span class="token punctuation">.</span>App<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    runWin <span class="token operator">=</span> myWin<span class="token punctuation">(</span>None<span class="token punctuation">)</span>    runWin<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token punctuation">)</span>    myApp<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><em>The code is arranged by some order and can be skipped if not important.</em></p><p>The final appearance is :<br><img src="/images/wxPython/app.png"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UI </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Common Latex Usage</title>
      <link href="/2019/04/16/latex/"/>
      <url>/2019/04/16/latex/</url>
      
        <content type="html"><![CDATA[<h1 id="常用Latex命令"><a href="#常用Latex命令" class="headerlink" title="常用Latex命令"></a>常用Latex命令</h1><h2 id="主体框架"><a href="#主体框架" class="headerlink" title="主体框架"></a>主体框架</h2><h3 id="准备部分"><a href="#准备部分" class="headerlink" title="准备部分"></a>准备部分</h3><ol><li><code>\document[]{}</code>—-定义文档属性和类型<br>e.g.<code>\document[titlepage,11pt]{article}</code> （有标题页，字体11pt，文章类型）</li><li><code>\usepakage{}</code>—-导入需要的宏文件<br>e.g. <code>\usepackage{graphicx}</code> （导入一个关于插入图片的包）<h3 id="文档内容"><a href="#文档内容" class="headerlink" title="文档内容"></a>文档内容</h3></li><li>文档开始：<code>\begin{document}</code><br>文档结束：<code>\end{docuemnt}</code></li><li>标题页：<code><br> \title{}<br> \author{}<br> \date{}<br> \maketitle</code></li><li>章节段落：<br><code>\section{}<br>\paragraph{}</code></li></ol><h2 id="局部需求"><a href="#局部需求" class="headerlink" title="局部需求"></a>局部需求</h2><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><code>\em </code></td><td>斜体</td></tr><tr><td><code>\large</code></td><td>大号字体</td></tr><tr><td><code>\bfseries</code></td><td>加粗</td></tr><tr><td><code>\today</code></td><td>当前日期</td></tr><tr><td><code>\thanks</code></td><td>添加页脚</td></tr><tr><td><code>\centerline{}</code></td><td>居中</td></tr><tr><td><code>\begin{itemize} \item \end{itemize}</code></td><td>列表</td></tr><tr><td><code>\includegraphics</code></td><td>插入图片</td></tr><tr><td><code>\fbox{}</code></td><td>插入框</td></tr><tr><td><code>\tableofcontents</code></td><td>设置目录</td></tr><tr><td><code>\addcontentsline{toc}{level}{name}</code></td><td>加入目录中</td></tr><tr><td><code>begin{tabular}{ccc} \toprule \midrule \bottomrule end{tabular}</code></td><td>表格，内容以&amp;分隔</td></tr></tbody></table><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h2>]]></content>
      
      
      <categories>
          
          <category> Latex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bit Operation and Bitmap</title>
      <link href="/2019/03/22/bit/"/>
      <url>/2019/03/22/bit/</url>
      
        <content type="html"><![CDATA[<h1 id="Learn-something-about-bit"><a href="#Learn-something-about-bit" class="headerlink" title="Learn something about bit"></a>Learn something about bit</h1><p>Owing to the binary system inside the computers, bit becomes important when programing.</p><h2 id="Bit-Operator"><a href="#Bit-Operator" class="headerlink" title="Bit Operator"></a>Bit Operator</h2><table><thead><tr><th style="text-align:left">operator</th><th style="text-align:center">function</th></tr></thead><tbody><tr><td style="text-align:left">&amp;</td><td style="text-align:center">and</td></tr><tr><td style="text-align:left">^</td><td style="text-align:center">xor</td></tr><tr><td style="text-align:left">&#124;</td><td style="text-align:center">or</td></tr><tr><td style="text-align:left">~</td><td style="text-align:center">not</td></tr><tr><td style="text-align:left">&lt;&lt;</td><td style="text-align:center">shift left</td></tr><tr><td style="text-align:left">&gt;&gt;</td><td style="text-align:center">shift right</td></tr></tbody></table><p>These are the basic operators of bit. The meanings are the same as in <em>logic</em>.</p><h2 id="Common-Use"><a href="#Common-Use" class="headerlink" title="Common Use"></a>Common Use</h2><h3 id="amp"><a href="#amp" class="headerlink" title="&amp;"></a>&amp;</h3><p><code>&amp;</code> is often used to do the <em>binary fetch operation(二进制取位操作)</em>.<br><em>e.g.</em> num&amp;1 &rarr;  get the last bit of num &rarr; judge num’s parity.</p><h3 id="124"><a href="#124" class="headerlink" title="&#124;"></a>&#124;</h3><p><code>|</code> is often used to do the <em>unconditional assignment(无条件赋值)</em>.<br><em>e.g.</em> num&#124;1 &rarr; change the last bit of num into 1forcibly &rarr; let num minus 1 and get the closest even number.</p><h3 id><a href="#" class="headerlink" title="^"></a>^</h3><ol><li>The inverse operation of <code>^</code> is itself; it can be used to inverse one bit of number.<br><em>e.g.</em> num^1 &rarr; inverse the last bit.</li><li><code>^</code> can also be used to do simple encryption.</li><li>Swap two numbers. <em>formula</em> &rarr; <strong>x^=y^=x^=y</strong></li></ol><h3 id="-1"><a href="#-1" class="headerlink" title="~"></a>~</h3><p><code>~</code> inverse all the bits in the number, thus we must pay attention to the sign.<em>CAUTION</em></p><h3 id="lt-lt"><a href="#lt-lt" class="headerlink" title="&lt;&lt;"></a>&lt;&lt;</h3><p><code>a&lt;&lt;b</code> moves a to the left by step of b, <em>i.e.</em> multiples a by 2<sup>b</sup> .</p><h3 id="gt-gt"><a href="#gt-gt" class="headerlink" title="&gt;&gt;"></a>&gt;&gt;</h3><p><code>a&gt;&gt;b</code>moves a to the right by step of a, <em>i.e.</em> divide a by 2<sup>b</sup>(integer).<br><em>p.s.</em> <em>The Greatest Common Divisor</em></p><ol><li><em>The Euclid Algorithm</em> gcd(a,b)=gcd(b,a%b)</li><li><em>The Binary Algorithm</em> It’s based on Euclid algorithm.<br>a. a,b both even &rarr; gcd(a,b)=2*gcd(a/2,b/2)<br>b. a odd, b even(or another possiblity) &rarr; gcd(a,b)=gcd(a,b/2)<br>c. a,b both odd &rarr; gcd(a,b)=gcd(b,a-b)</li></ol><p>Then use recursion to realize it.</p><h2 id="Bitset-And-Bitmap-In-C"><a href="#Bitset-And-Bitmap-In-C" class="headerlink" title="Bitset And Bitmap In C++"></a>Bitset And Bitmap In C++</h2><p>After learning bit, there are something further.</p><h3 id="Bitset"><a href="#Bitset" class="headerlink" title="Bitset"></a>Bitset</h3><p><code>bitset</code> is a encapsulated class in C++. It provides operations on bits.<br>The way to access each bit is similar to the array.<code>a[3]</code><br>The way to output it is <code>cout</code>.<br>Following are the ways to initial a bitset.</p><pre><code>#include &lt;bitset&gt;#include &lt;iostream&gt;using namespace std;bitset&lt;16&gt; a(string&quot;110101001&quot;);//match from right on.      //match from left on only when the bitset is too short.bitset&lt;4&gt; b(16);//transform int.bitset&lt;23&gt; c(string(&quot;1111110000&quot;),5,3);// get the string from pos 5 by 3 steps.int main(){    cout&lt;&lt;a&lt;&lt;endl&lt;&lt;b&lt;&lt;endl&lt;&lt;c&lt;&lt;endl;    return 0;}</code></pre><p><img src="/images/bit/bit_1.jpg" style="zoom:100%"></p><table><thead><tr><th>operation</th><th>function</th></tr></thead><tbody><tr><td>a.any()</td><td>if there are some bit as 1</td></tr><tr><td>a.none()</td><td>if all 0</td></tr><tr><td>a.count()</td><td>count 1</td></tr><tr><td>a.size()</td><td>how many bits</td></tr><tr><td>a.test(pos)</td><td>if a[pos]==1</td></tr><tr><td>a.set()   <em>(reset(),the opposite)</em></td><td>set all bits in a as 1</td></tr><tr><td>a.set(pos)    <em>(reset(),the opposite)</em></td><td>set a[pos] as 1</td></tr><tr><td>a.flip()</td><td>inverse all bits</td></tr><tr><td>a.flip(pos)</td><td>inverse a[pos]</td></tr><tr><td>a.to_ulong()</td><td>transform a into unsigned long</td></tr></tbody></table><h3 id="Bitmap"><a href="#Bitmap" class="headerlink" title="Bitmap"></a>Bitmap</h3><p><em>Bitmap</em> is a good way to store unique numbers.<em>(similar to bool, but more space-saving)</em><br>Usually, one int(integer) in the computer occupies 4byte <em>i.e.</em> 32 digit, but sometimes we use int to do countings. In specific occassion we only use it to judge <em>true</em> or <em>fasle</em>, thus it’s better to use bool. However, one bool occupies 1 byte, <em>i.e.</em> 8 digit, which is unreasonable. Hence, we want to use only one bit to do the work.<br><em>e.g.</em> There are nonrepetitive ints between [1,max], and max is alarge integer.</p><pre><code>#include&lt;iostream&gt;using namespace std;int a[1000];void insert(int x){    int i=x&gt;&gt;5, j=x%32;    a[i]|=(1&lt;&lt;j);}int main(){    insert(15);    cout&lt;&lt;a[0];    return 0;}</code></pre><p>And since we know how to use <em>Bitset</em>, we can change the array into a bitset and the operations will be largely simplified.</p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
            <tag> Grammar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown In Typora!!!</title>
      <link href="/2019/03/20/markdown-in-typora/"/>
      <url>/2019/03/20/markdown-in-typora/</url>
      
        <content type="html"><![CDATA[<h1 id="From-today-on-I-will-begin-using-Markdown"><a href="#From-today-on-I-will-begin-using-Markdown" class="headerlink" title="From today on, I will begin using Markdown."></a>From today on, I will begin using Markdown.</h1><p>It’s already 2019 now. If still using <strong>word</strong> or <strong>notepad</strong> to write articles, maybe I will <del>lose face</del> fall behind.<br>So, it’s time to start using <strong>Mardown</strong>!</p><h2 id="Editor"><a href="#Editor" class="headerlink" title="Editor"></a>Editor</h2><p>There are quite a lot markdown editors online. I prefer the <em>Typora</em>, because:</p><ol><li>Clean appearance.</li><li>Convenient to use.</li><li>Real-time preview.</li><li>Totally free.</li></ol><h5 id="Appearance"><a href="#Appearance" class="headerlink" title="Appearance"></a>Appearance</h5><p><em>Typora</em> has almost no buttons around the working area, making it looks more clean than <em>Word</em> or other text editors.<br><img src="/images/markdown-in-typora_1.jpg" style="zoom:25%"></p><h5 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h5><p><em>Typora</em> provides most of the common commands, and helps the author with some details.<br><img src="/images/markdown-in-typora_2.jpg" style="zoom:50%"></p><h5 id="Preview"><a href="#Preview" class="headerlink" title="Preview"></a>Preview</h5><p><em>Typora</em>‘s best feature. Use the <code>win+/</code>(personal setting) shortcut key to switch between the souce code and the preview.<br><img src="/images/markdown-in-typora_3.jpg" style="zoom:30%"><img src="/images/markdown-in-typora_4.jpg" style="zoom:30%"></p><h2 id="Grammar"><a href="#Grammar" class="headerlink" title="Grammar"></a>Grammar</h2><p>Here I will list the commands in common use.</p><table><thead><tr><th style="text-align:center">Function</th><th style="text-align:left">Command</th></tr></thead><tbody><tr><td style="text-align:center">only 2 levels of titles</td><td style="text-align:left">= title1, - title2</td></tr><tr><td style="text-align:center">at most 6 levels of titles</td><td style="text-align:left"># title1, …, ###### title6</td></tr><tr><td style="text-align:center">reference</td><td style="text-align:left">&gt; reference</td></tr><tr><td style="text-align:center">code blocks</td><td style="text-align:left">use 4 spaces or 1 tab before lines</td></tr><tr><td style="text-align:center">emphasize</td><td style="text-align:left">*text* , _text_ , **text** , __text__</td></tr><tr><td style="text-align:center">split line</td><td style="text-align:left">***, -–, _____, =====</td></tr><tr><td style="text-align:center">link</td><td style="text-align:left">[title](url) , or \&lt;url></td></tr><tr><td style="text-align:center">picture</td><td style="text-align:left">just drag the picture into <em>Typora</em>, or \&lt;img src=” “></td></tr><tr><td style="text-align:center">table</td><td style="text-align:left">table option in <em>Typora</em>, or use text&#124;text to split columns</td></tr></tbody></table><p>As for the size of pictures, I find it difficult when directly draging pictures here.<br>So the better way is adding <code>style=&quot;zoom:40%&quot;</code> at end of  the <code>&lt;img&gt;</code>.(it’s about <em>HTML</em>)</p><p>Other things can be found online.</p><h2 id="This-article-aims-at-learning-Mardown-and-Typora-for-myself"><a href="#This-article-aims-at-learning-Mardown-and-Typora-for-myself" class="headerlink" title="This article aims at learning Mardown and Typora for myself."></a>This article aims at learning Mardown and Typora for myself.</h2><h3 id="Welcome-for-corrections"><a href="#Welcome-for-corrections" class="headerlink" title="Welcome for corrections."></a>Welcome for corrections.</h3>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World!!!</title>
      <link href="/2019/03/19/hello-world/"/>
      <url>/2019/03/19/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><p>Welcome to my blog!!!</p><p>This is my very first post!</p><p>To be continued.</p><p>Ljh<br>2019-3-19</p><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><p>���²�����ز��������ÿ�ζ����ǣ�<br></p><pre class=" language-bash"><code class="language-bash">hexo cleanhexo g -d</code></pre><p>����ͼƬ�ǵ���/images��Ϊ����·����ͷ��<br></p><p>Ljh<br>2020��1��13��</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
